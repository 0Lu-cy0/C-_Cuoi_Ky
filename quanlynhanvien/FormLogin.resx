<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>